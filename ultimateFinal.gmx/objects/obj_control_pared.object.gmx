<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_stop_all();
apagar = false;
obj_prota.depth = 0;
if(global.imagenresuelta == true)
{
    obj_prota.y = 200;       
    apagar = true;
    
}
apagarSndPalancas = false;
contadorPalancas = 1;
bajarVolumen = false;
terminado = false;
candialogo = false;

derecha = instance_create(501,0,obj_pared_derecha);
izquierda = instance_create(109,0,obj_pared_izq);
puerta = instance_create(292,720,obj_puerta);

paredizq = instance_create(150,0,obj_shadowcaster_cueva);
paredizq.cast_points = 4;
paredizq.cast_x[0]=400;
paredizq.cast_y[0]=10;
paredizq.cast_x[1]=400;
paredizq.cast_y[1]=1530;
paredizq.cast_x[2]=600;
paredizq.cast_y[2]=1530;
paredizq.cast_x[3]=600;
paredizq.cast_y[3]=10;

paredder = instance_create(-50,0,obj_shadowcaster_cueva);
paredder.cast_points = 4;
paredder.cast_x[0]=300;
paredder.cast_y[0]=10;
paredder.cast_x[1]=300;
paredder.cast_y[1]=1530;
paredder.cast_x[2]=100;
paredder.cast_y[2]=1530;
paredder.cast_x[3]=100;
paredder.cast_y[3]=10;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>contadorPalancas = contadorPalancas - 0.05;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////////// cueva //////////
if (room == rm_cueva)
{
    if (obj_prota.y + 64 &lt; 1450)
    {
        if (!sound_isplaying(snd_puzzle_palancas))
        {
            sound_play(snd_puzzle_palancas);        
        }
    }
    
    if (obj_puerta.apagarSndPalancas == true )
    {    
        if (contadorPalancas &gt;= 0)
        {
            if (obj_puerta.resuelto == true)
            sound_volume(snd_puzzle_palancas,contadorPalancas);
            if (alarm[0] &lt; 0)
            {
                alarm[0] = 10;
            }
        }
        else
        {
            contadorPalancas = 1;
            sound_stop(snd_puzzle_palancas);
            obj_puerta.apagarSndPalancas = false;        
        }    
    }
    
    if (obj_prota.y +64 &lt; obj_puerta.y)
    {
        if (!sound_isplaying(snd_puzzle_acertijo))
        {
            sound_play(snd_puzzle_acertijo);        
        }
    }
    
    if (obj_control_acertijo.ganar == true )
    {    
        if (contadorPalancas &gt;= 0)
        {
            if (obj_puerta.resuelto == true)
            sound_volume(snd_puzzle_acertijo,contadorPalancas);
            if (alarm[0] &lt; 0)
            {
                alarm[0] = 10;
            }
        }
        else
        {
            sound_stop(snd_puzzle_acertijo);        
        }    
    }
}

/////////cueva2/////////

if (room == rm_cueva_2)
{
    if (apagar == true)
    {
        if (contadorPalancas &gt;= 0)
        {
            if (obj_puerta.resuelto == true)
            sound_volume(snd_puzzle_imagen,contadorPalancas);
            if (alarm[0] &lt; 0)
            {
                alarm[0] = 10;
            }
        }
            else
            {
                sound_stop(snd_puzzle_imagen);
                contador = 1;       
            }
    }      

    if (obj_prota.y &lt; 350  &amp;&amp; obj_prota.y &gt; 300 &amp;&amp; global.imagenresuelta == false)
    {        
        room_goto(rm_puzzle);
    }    

    if (obj_prota.y &lt; 250 &amp;&amp; terminado == false)
    {
        terminado = true;
        candialogo = true;
    }
    if (obj_prota.y + 64 &lt; 1450)
    {
        if (!sound_isplaying(snd_puzzle_objeto))
        {
            sound_play(snd_puzzle_objeto);        
        }
    }
    
    if (obj_puerta.apagarSndPalancas == true )
    {    
        if (contadorPalancas &gt;= 0)
        {
            if (obj_puerta.resuelto == true)
            sound_volume(snd_puzzle_objeto,contadorPalancas);
            if (alarm[0] &lt; 0)
            {
                alarm[0] = 10;
            }
        }
        else
        {
            contadorPalancas = 1;
            sound_stop(snd_puzzle_objeto);
            obj_puerta.apagarSndPalancas = false;        
        }    
    }
    if (obj_prota.y &lt;= 50)
    {
        global.imagenresuelta = false;
        sound_stop_all();
        room_goto(rm_final);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
